import fs from "node:fs/promises";

import * as core from "@actions/core";
import { JSDOM } from "jsdom";
import { DateTime } from "luxon";
import { Feed } from "feed";

const title = core.getInput("TITLE", { required: true });
const subtitle =
  core.getInput("SUBTITLE") ?? "Generated by @gracefullight/rssify";
const url = core.getInput("URL", { required: true });
const authorUrl = core.getInput("AUTHOR_URL") ?? "https://gracefullight.dev/";
const authorName = core.getInput("AUTHOR_NAME") ?? "gracefullight";
const authorEmail =
  core.getInput("AUTHOR_EMAIL") ?? "gracefullight.dev@gmail.com";

const { hostname } = new URL(url);
const copyright =
  core.getInput("COPYRIGHT") ?? `All Rights are resolved to ${hostname}`;
const language = core.getInput("LANGUAGE") ?? "ko";
const itemTitleSelector = core.getInput("ITEM_TITLE_CSS", { required: true });
const itemUrlSelector = core.getInput("ITEM_URL_CSS", { required: true });
const itemDateSelector = core.getInput("ITEM_DATE_CSS", { required: true });
const itemAuthorSelector = core.getInput("ITEM_AUTHOR_CSS");
const itemDescriptionSelector = core.getInput("ITEM_DESCRIPTION_CSS");
const itemImageSelector = core.getInput("ITEM_IMAGE_CSS");
const itemDateFormat = core.getInput("ITEM_DATE_FORMAT") ?? "yyyy-MM-dd";
const itemTimezone = core.getInput("ITEM_TIMEZONE") ?? "Asia/Seoul";
const filename = core.getInput("FILENAME") ?? "atom.xml";

const feed = new Feed({
  title,
  description: subtitle,
  copyright,
  id: url,
  link: authorUrl,
  language: language,
  author: {
    name: authorName,
    email: authorEmail,
  },
});

const {
  window: { document },
} = await JSDOM.fromURL(url);

const titles = [...document.querySelectorAll<HTMLElement>(itemTitleSelector)];
const urls = [...document.querySelectorAll<HTMLAnchorElement>(itemUrlSelector)];
const descriptions = itemDescriptionSelector
  ? [...document.querySelectorAll<HTMLElement>(itemDescriptionSelector)]
  : [];

const authors = itemAuthorSelector
  ? [...document.querySelectorAll<HTMLElement>(itemAuthorSelector)]
  : [];

const dates = itemDateSelector
  ? [...document.querySelectorAll<HTMLElement>(itemDateSelector)]
  : [];

const images = itemImageSelector
  ? [...document.querySelectorAll<HTMLElement>(itemImageSelector)]
  : [];

titles.forEach((titleElement, index) => {
  const title = titleElement.textContent?.trim() as string;
  const itemUrl = urls[index].href;
  const description = descriptions[index]?.textContent ?? "";
  const author = authors[index]?.textContent;
  const image = images[index]?.textContent;
  const rawDate = dates[index].textContent;
  const date = rawDate
    ? DateTime.fromFormat(rawDate.trim(), itemDateFormat, {
        zone: itemTimezone,
      })
    : DateTime.local();
  const itemDate = date.toJSDate();

  feed.addItem({
    title,
    id: itemUrl,
    link: itemUrl,
    description,
    author: author ? [{ name: author }] : undefined,
    date: itemDate,
    image: image ? image : undefined,
  });
});

const atom = feed.atom1();
await fs.writeFile(filename, atom, "utf8");
